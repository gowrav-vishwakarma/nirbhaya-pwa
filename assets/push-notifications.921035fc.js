import{b as d,u as h,C as p,P as e,_ as m}from"./index.168e4218.js";import{m as v,v as _}from"./firebase.bfc3b82f.js";var b=d(async({router:r})=>{const t=h();if(console.log("Initializing push notifications"),p.isNativePlatform()){console.log("Running on native platform");try{console.log("notification get channel after",JSON.stringify(e.listChannels(),null,2)),await e.createChannel({id:"fcm_fallback_notification_channel",name:"Default SOS alert",description:"Used for specific sos alert",importance:5,visibility:1,sound:"default",vibration:!0}).then(()=>{console.log("push notification channel created fcm_fallback_notification_channel")}).catch(o=>{console.log("push notification channel error fcm_fallback_notification_channel: ",o)}),await e.createChannel({id:"sosalertchannel",name:"SOS alert channel",description:"sosalertchannel used for only sos event",importance:5,visibility:1,sound:"sosalert.mp3",vibration:!0,lights:!0}).then(()=>{console.log("push notification channel created sosalertchannel")}).catch(o=>{console.log("push notification channel error sosalertchannel: ",o)}),console.log("notification get channel after try 101",JSON.stringify(e.listChannels,null,2));const n=await e.requestPermissions();console.log("Push notification permission status:",n),n.receive==="granted"?(e.addListener("registration",async o=>{console.log("Push registration success, token: "+o.value),localStorage.setItem("fcmToken",o.value),t.isLoggedIn&&await t.sendTokenIfAvailable()}),e.addListener("pushNotificationReceived",o=>{console.log("Push notification received: native app ",o,JSON.stringify(o,null,2))}),e.addListener("pushNotificationActionPerformed",o=>{console.log("Push notification action performed",o);const{sosEventId:a,location:i}=o.notification.data;r.push({name:"notifications",params:{sosEventId:a,location:i}})}),e.addListener("registrationError",o=>{console.log("Error on registration:",o)}),await e.register(),console.log("Push notifications registered")):console.log("Push notification permission denied")}catch(n){console.error("Error setting up push notifications:",n)}}else if(typeof window!="undefined"&&"serviceWorker"in navigator){console.log("Running on web platform");try{const n=await v,{getToken:o,onMessage:a}=await m(()=>import("./index.esm.fbd29729.js"),["assets/index.esm.fbd29729.js","assets/firebase.bfc3b82f.js","assets/index.168e4218.js","assets/index.85b279a3.css"]),i=await o(n,{vapidKey:_});i?(console.log("FCM token:",i),localStorage.setItem("fcmToken",i),t.isLoggedIn&&await t.sendTokenIfAvailable()):console.log("No registration token available. Request permission to generate one."),a(n,s=>{console.log("Message received:",s);const{title:f="Default Title",body:g="Default Body"}=s.notification||{},{sosEventId:c="",location:l=""}=s.data||{};if(Notification.permission==="granted"){const u=new Notification(f,{body:g,data:{sosEventId:c,location:l}});u.onclick=()=>{window.focus(),r.push({name:"notifications",params:{sosEventId:c,location:l}})}}})}catch(n){console.error("Error setting up push notifications:",n)}}else console.log("Push notifications are not supported on this platform")});export{b as default};
